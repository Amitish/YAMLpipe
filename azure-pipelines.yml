trigger:
  branches:
    include:
      - main
      - feature/*

pool:
  vmImage: 'windows-latest'

steps:
# 1. Checkout repo
- checkout: self

# 2. Terraform installer
- task: TerraformInstaller@1
  inputs:
    terraformVersion: '1.6.6'

# 3. Terraform init
- script: terraform init
  displayName: 'Init'

# 4. Terraform plan
- script: terraform plan -out=tfplan
  displayName: 'Plan'

# 5. Install Python & Checkov
- powershell: |
    Set-ExecutionPolicy Bypass -Scope Process -Force

    Write-Host "Downloading Python installer..."
    Invoke-WebRequest -Uri https://www.python.org/ftp/python/3.10.11/python-3.10.11-amd64.exe -OutFile python-installer.exe

    Write-Host "Installing Python..."
    Start-Process .\python-installer.exe -ArgumentList '/quiet InstallAllUsers=1 PrependPath=1 Include_test=0 Include_pip=1' -Wait

    # Refresh PATH
    $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine")

    Write-Host "Checking Python version..."
    python --version

    Write-Host "Upgrading pip..."
    python -m pip install --upgrade pip

    Write-Host "Installing Checkov..."
    python -m pip install checkov
  displayName: 'Install Python & Checkov (Windows)'

# 6. Run Security Scan (Checkov)
- powershell: |
    Write-Host "Running Checkov security scan..."
    checkov -d .
  displayName: 'Run Security Scan (Checkov)'

# 7. Terraform apply (only on main branch)
- script: terraform apply -auto-approve tfplan
  displayName: 'Terraform Apply (only on main branch)'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
